name: Supposed version check

on:
  pull_request:
    types:
      - labeled
      - unlabeled
      - opened
      - edited
      - synchronize
    paths:
      - '**'
      - '!chart/**'
      - '!pom.xml'
      - '!README.md'

jobs:
  enforce-label:
    name: Supposed version not exist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Fail if there is no correct label
        if: |
          !contains(github.event.pull_request.labels.*.name, 'major')
          && !contains(github.event.pull_request.labels.*.name, 'minor')
          && !contains(github.event.pull_request.labels.*.name, 'patch')
        run: |
          echo "::group::Correct label NOT found"
          echo "::endgroup::"
          exit 1
      - name: Check major label
        if: contains(github.event.pull_request.labels.*.name, 'major')
        run: echo "CORRECT_LABEL=$(echo "major")" >> $GITHUB_ENV
      - name: Check minor label
        if: contains(github.event.pull_request.labels.*.name, 'minor')
        run: echo "CORRECT_LABEL=$(echo "minor")" >> $GITHUB_ENV
      - name: Check patch label
        if: contains(github.event.pull_request.labels.*.name, 'patch')
        run: echo "CORRECT_LABEL=$(echo "patch")" >> $GITHUB_ENV

      - name: Get supposed release version
        id: release_version
        run: |
          echo "::set-output name=release::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Calculate new version
        uses: actions-ecosystem/action-bump-semver@v1
        id: bump_semver
        with:
          current_version: ${{ steps.release_version.outputs.release }}
          level: ${{ env.CORRECT_LABEL }}

      - uses: mukunku/tag-exists-action@v1.0.0
        id: checkTag
        with:
          tag: ${{ steps.bump_semver.outputs.new_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send comment to the PR
        uses: actions/github-script@0.9.0
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `⚠️ Version \`${{ steps.bump_semver.outputs.new_version }}\` already exists ⚠️`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Exit if version already exists
        if: ${{ steps.checkTag.outputs.exists == 'true' }}
        run: |
          echo "::group::Version that should be released already exists in GitHub tags"
          exit 1
#      - uses: actions/github-script@0.9.0
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `*Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, New supposed version: \`${{ steps.bump_semver.outputs.new_version }}\`*`;
#
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
